E(Includes/global)

uniform sampler2D diffuse_tex;
uniform sampler2D specular_tex;
uniform sampler2D normal_tex;
uniform sampler2D depth_tex;
uniform sampler2D scene_tex;


out vec3 fracolor;

float sample_depth(vec2 c) {
	return (1-texelFetch(depth_tex, ivec2(c),0).r) *2.0 - 1.0;
}

vec4 sample_diff_and_flat(vec2 c) {
	return texelFetch(diffuse_tex, ivec2(c), 0);
}
vec4 sample_spec_and_pow(vec2 c) {
	return texelFetch(specular_tex, ivec2(c), 0);
}
vec3 sample_scene_color(vec2 c) {
	return texelFetch(scene_tex, ivec2(c), 0).rgb;
}
vec3 sample_normal(vec2 c) {
	vec2 n = texelFetch(normal_tex, ivec2(c), 0).xy * 2 -1;
	return vec3(n.x, n.y, sqrt(1 - dot(n, n)));
}
vec3 sample_view_pos(vec2 c) {
	vec2 NDC_xy = (c / vec2(screen_width, screen_height)) * 2 - 1;
	return w_div(iP * vec4(NDC_xy, sample_depth(c), 1));
}

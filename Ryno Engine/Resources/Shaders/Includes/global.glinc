#version 430

layout(std140, binding = 0) uniform glob_ubo {
	mat4 V;
	mat4 iV;
	mat4 P;
	mat4 iP;
	mat4 VP;
	mat4 iVP;
	mat4 itV;
	vec4 cameraPos;
	float time;
	int screen_width;
	int screen_height;
};

float split(uint color, int n) {
	int index = n * 8;
	return bitfieldExtract(color, index, 8) / 255.0f;
}
vec3 split3(uint color) {
	return vec3(split(color, 0), split(color, 1), split(color, 2));
}
vec4 split4(uint color) {
	return vec4(split(color, 0), split(color, 1), split(color, 2), split(color,3));
}

float length2(vec3 l) {
	return l.x*l.x + l.y * l.y + l.z * l.z;
}

vec3 clean_color(vec3 c) {
	float t = 0.00390625; // 1/255
	return vec3(t > c.x ? 0 : c.x, t > c.y ? 0 : c.y, t > c.z ? 0 : c.z);
}

float lerp(float a, float b, float t) {
	return a * (1-t) + t * b;
}

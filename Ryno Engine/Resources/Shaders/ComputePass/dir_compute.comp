E(Includes/global)
E(Includes/dir_include)

layout (std430, binding=2) buffer dir_compute_ssbo
{ 
	DirectionalLight lights[];
};

uniform uint nrOfLights;

layout(local_size_x=32,local_size_y=32,local_size_z=1) in;
layout(rgba8, binding = 0) uniform image2D main_tex;


void main(){
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
	vec3 color = imageLoad(main_tex, coords).xyz;
	for (int i = 0; i < nrOfLights; i++){
		color+=get_shaded_fragment(lights[i],coords);
	}

	imageStore(main_tex, coords,  vec4(color,1));
}

float get_shadow(vec4 position_world_space, float dotNL) {
	return 1;
}